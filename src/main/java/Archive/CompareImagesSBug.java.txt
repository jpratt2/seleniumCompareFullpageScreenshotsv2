import com.assertthat.selenium_shutterbug.core.Capture;
import com.assertthat.selenium_shutterbug.core.Shutterbug;
import org.openqa.selenium.WebDriver;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

public class compareImagesSBug {
    

    //see https://github.com/assertthat/selenium-shutterbug/issues/70 for details
    /**
     * assert a full-page screenshot
     *
     * @param   driver                      WebDriver instance
     * @param   expectedImageFolderPath     Optional: String - path to the folder containing the expected image. For example: "expected".
     *                                      If omitted, the "screenshots" folder will be used.
     * @param   expectedImageName           Optional: String - the name of the expected image file, including the .png file extension.
     *                                      If omitted, a file name based on the URL will be used.
     * @param   diffImageFolderPath         Optional: String - file path to the folder for the diff Image.
     *                                      If omitted, the "screenshots" folder will be used.
     * @param   diffImageName           Optional: String - name for the diffImage. The file extension should not be included.
     *                                  If omitted, it will create a file name ending in "-DIFF_IMAGE.png"
     * @param   deviation               Double - threshold or tolerance level considered acceptable before a difference is reported.
     *                                  If omitted, the tolerance level will be 0.0. For example: 0.1
     *
     * @return  Boolean                 Returns true if assertion succeeds, returns false if it fails.
     */
    public static Boolean compareScreenshotFP(WebDriver driver, String expectedImageFolderPath, String expectedImageName, String diffImageFolderPath, String diffImageName, Double deviation) {
        String expectedImagePath = expectedImageFolderPath + File.separator + expectedImageName;
        String diffImagePath = diffImageFolderPath + File.separator + diffImageName;
        BufferedImage expectedImage = null;
        try {
            expectedImage = ImageIO.read(new File(expectedImagePath));
        } catch (IOException e) {
            e.printStackTrace();
        }
        return Shutterbug.shootPage(driver,  Capture.FULL).equalsWithDiff(expectedImage, diffImagePath, deviation);
    }
    public static Boolean compareScreenshotFP(WebDriver driver, String expectedImageFolderPath, String expectedImageName, String diffImageFolderPath, String diffImageName) {
        Double deviation = 0.0;
        return compareScreenshotFP(driver, expectedImageFolderPath, expectedImageName, diffImageFolderPath, diffImageName, deviation);
    }
    public static Boolean compareScreenshotFP(WebDriver driver, String expectedImageFolder, String diffImageFolder, Double deviation) {
        String expectedImageName = Utilities.convertUrlToFileName(driver.getCurrentUrl());
        String diffImageName = expectedImageName + "-DIFF_IMAGE";
        diffImageName = Utilities.truncate(diffImageName, 159-12);//account for the addition of "-DIFF_IMAGE" characters
        expectedImageName += ".png";
        return compareScreenshotFP(driver, expectedImageFolder, expectedImageName, diffImageFolder, diffImageName, deviation);
    }
    public static Boolean compareScreenshotFP(WebDriver driver, String expectedImageFolderPath, String diffImageFolderPath) {
        Double deviation = 0.0;
        return compareScreenshotFP(driver, expectedImageFolderPath, diffImageFolderPath, deviation);
    }
    public static Boolean compareScreenshotFP(WebDriver driver, Double deviation) {
        String expectedImageFolderPath = "screenshots";
        String diffImageFolderPath = "screenshots";
        return compareScreenshotFP(driver, expectedImageFolderPath, diffImageFolderPath, deviation);
    }
    public static Boolean compareScreenshotFP(WebDriver driver) {
        Double deviation = 0.0;
        return compareScreenshotFP(driver, deviation);
    }

}
